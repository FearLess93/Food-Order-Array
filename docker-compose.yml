version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: arrayeats-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: arrayeats
      POSTGRES_PASSWORD: arrayeats_password
      POSTGRES_DB: arrayeats
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U arrayeats']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: arrayeats-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://arrayeats:arrayeats_password@db:5432/arrayeats
      JWT_SECRET: ${JWT_SECRET:-change-this-in-production}
      NODE_ENV: production
      PORT: 4000
    ports:
      - '4000:4000'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: arrayeats-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:4000
      VITE_WS_URL: ws://localhost:4000
    ports:
      - '3000:3000'
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
