version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: array-eats-db
    environment:
      POSTGRES_DB: array_eats
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - array-eats-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: array-eats-backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: array_eats
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: your_jwt_secret_change_in_production
      JWT_REFRESH_SECRET: your_refresh_secret_change_in_production
      ALLOWED_EMAIL_DOMAIN: array.com
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_FROM: noreply@array.com
      TALABAT_API_KEY: ${TALABAT_API_KEY}
      TALABAT_API_URL: https://api.talabat.com/v1
      TALABAT_ENABLED: false
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - array-eats-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm start

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: array-eats-frontend
    environment:
      VITE_API_URL: http://localhost:3000/api
    ports:
      - "3001:3001"
    depends_on:
      - backend
    networks:
      - array-eats-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

networks:
  array-eats-network:
    driver: bridge

volumes:
  postgres_data:
